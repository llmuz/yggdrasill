// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: config/db_engine_config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EngineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 使用驱动的名称, [mysql, postgres]
	// @gotags: toml:"driver"
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty" toml:"driver"`
	// 数据库链接的基本信息
	// @gotags: toml:"dsn"
	Dsn string `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty" toml:"dsn"`
	//  gorm 提供的配置
	// @gotags: toml:"skip_default_transaction"
	SkipDefaultTransaction *bool `protobuf:"varint,3,opt,name=skip_default_transaction,json=skipDefaultTransaction,proto3,oneof" json:"skip_default_transaction,omitempty" toml:"skip_default_transaction"`
	// @gotags: toml:"prepare_stmt"
	PrepareStmt *bool `protobuf:"varint,4,opt,name=prepare_stmt,json=prepareStmt,proto3,oneof" json:"prepare_stmt,omitempty" toml:"prepare_stmt"`
	// @gotags: toml:"disable_automatic_ping"
	DisableAutomaticPing *bool `protobuf:"varint,5,opt,name=disable_automatic_ping,json=disableAutomaticPing,proto3,oneof" json:"disable_automatic_ping,omitempty" toml:"disable_automatic_ping"`
	// @gotags: toml:"create_batch_size"
	CreateBatchSize *int32 `protobuf:"varint,6,opt,name=create_batch_size,json=createBatchSize,proto3,oneof" json:"create_batch_size,omitempty" toml:"create_batch_size"`
	// 连接池配置
	// @gotags: toml:"conn_pool"
	ConnPool *ConnPool `protobuf:"bytes,7,opt,name=conn_pool,json=connPool,proto3" json:"conn_pool,omitempty" toml:"conn_pool"`
	// 日志记录配置
	// @gotags: toml:"orm_log_config"
	OrmLogConfig *OrmLogConfig `protobuf:"bytes,8,opt,name=orm_log_config,json=ormLogConfig,proto3" json:"orm_log_config,omitempty" toml:"orm_log_config"`
}

func (x *EngineConfig) Reset() {
	*x = EngineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_db_engine_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineConfig) ProtoMessage() {}

func (x *EngineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_db_engine_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineConfig.ProtoReflect.Descriptor instead.
func (*EngineConfig) Descriptor() ([]byte, []int) {
	return file_config_db_engine_config_proto_rawDescGZIP(), []int{0}
}

func (x *EngineConfig) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *EngineConfig) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *EngineConfig) GetSkipDefaultTransaction() bool {
	if x != nil && x.SkipDefaultTransaction != nil {
		return *x.SkipDefaultTransaction
	}
	return false
}

func (x *EngineConfig) GetPrepareStmt() bool {
	if x != nil && x.PrepareStmt != nil {
		return *x.PrepareStmt
	}
	return false
}

func (x *EngineConfig) GetDisableAutomaticPing() bool {
	if x != nil && x.DisableAutomaticPing != nil {
		return *x.DisableAutomaticPing
	}
	return false
}

func (x *EngineConfig) GetCreateBatchSize() int32 {
	if x != nil && x.CreateBatchSize != nil {
		return *x.CreateBatchSize
	}
	return 0
}

func (x *EngineConfig) GetConnPool() *ConnPool {
	if x != nil {
		return x.ConnPool
	}
	return nil
}

func (x *EngineConfig) GetOrmLogConfig() *OrmLogConfig {
	if x != nil {
		return x.OrmLogConfig
	}
	return nil
}

// gorm 日志配置
type OrmLogConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询日志配置
	// 慢查询日志的时长
	// 默认 1 秒
	// @gotags: toml:"slow_threshold"
	SlowThreshold string `protobuf:"bytes,1,opt,name=slow_threshold,json=slowThreshold,proto3" json:"slow_threshold,omitempty" toml:"slow_threshold"`
	// 默认值为 info
	// @gotags: toml:"log_level"
	LogLevel string `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty" toml:"log_level"`
	// @gotags: toml:"ignore_record_not_found_error"
	IgnoreRecordNotFoundError bool `protobuf:"varint,3,opt,name=ignore_record_not_found_error,json=ignoreRecordNotFoundError,proto3" json:"ignore_record_not_found_error,omitempty" toml:"ignore_record_not_found_error"`
	// @gotags: toml:"colorful"
	Colorful bool `protobuf:"varint,4,opt,name=colorful,proto3" json:"colorful,omitempty" toml:"colorful"`
}

func (x *OrmLogConfig) Reset() {
	*x = OrmLogConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_db_engine_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrmLogConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrmLogConfig) ProtoMessage() {}

func (x *OrmLogConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_db_engine_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrmLogConfig.ProtoReflect.Descriptor instead.
func (*OrmLogConfig) Descriptor() ([]byte, []int) {
	return file_config_db_engine_config_proto_rawDescGZIP(), []int{1}
}

func (x *OrmLogConfig) GetSlowThreshold() string {
	if x != nil {
		return x.SlowThreshold
	}
	return ""
}

func (x *OrmLogConfig) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *OrmLogConfig) GetIgnoreRecordNotFoundError() bool {
	if x != nil {
		return x.IgnoreRecordNotFoundError
	}
	return false
}

func (x *OrmLogConfig) GetColorful() bool {
	if x != nil {
		return x.Colorful
	}
	return false
}

// 连接池配置
type ConnPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据库连接池配置
	// max_open_conn 最大连接数量, 默认是0，表示不限制链接数量
	// @gotags: toml:"max_open_conn"
	MaxOpenConn *int32 `protobuf:"varint,1,opt,name=max_open_conn,json=maxOpenConn,proto3,oneof" json:"max_open_conn,omitempty" toml:"max_open_conn"`
	// 如果 max_open_conn 大于 0 但小于新的 max_idle_conn，则新的 max_idle_conn 将减少以匹配 max_open_conn 限制。
	// max_idle_conn 最大空闲链接链接数量， 小于等于 0 表示不保留任何空闲链接, 默认为 2 表示保留两个空闲链接
	// @gotags: toml:"max_idle_conn"
	MaxIdleConn *int32 `protobuf:"varint,2,opt,name=max_idle_conn,json=maxIdleConn,proto3,oneof" json:"max_idle_conn,omitempty" toml:"max_idle_conn"`
	// 链接的最长存活时间, 如果小于等于 0，表示链接不会关闭
	// @gotags: toml:"max_life_time"
	MaxLifeTime *string `protobuf:"bytes,3,opt,name=max_life_time,json=maxLifeTime,proto3,oneof" json:"max_life_time,omitempty" toml:"max_life_time"`
	// 设置空闲链接的最长存活时间
	// 超时的链接可能会在被复用之前延迟关闭
	// 如果设置的值小于等于0, 那么空闲链接不会因为超时而关闭
	// @gotags: toml:"max_idle_time"
	MaxIdleTime *string `protobuf:"bytes,4,opt,name=max_idle_time,json=maxIdleTime,proto3,oneof" json:"max_idle_time,omitempty" toml:"max_idle_time"`
}

func (x *ConnPool) Reset() {
	*x = ConnPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_db_engine_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnPool) ProtoMessage() {}

func (x *ConnPool) ProtoReflect() protoreflect.Message {
	mi := &file_config_db_engine_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnPool.ProtoReflect.Descriptor instead.
func (*ConnPool) Descriptor() ([]byte, []int) {
	return file_config_db_engine_config_proto_rawDescGZIP(), []int{2}
}

func (x *ConnPool) GetMaxOpenConn() int32 {
	if x != nil && x.MaxOpenConn != nil {
		return *x.MaxOpenConn
	}
	return 0
}

func (x *ConnPool) GetMaxIdleConn() int32 {
	if x != nil && x.MaxIdleConn != nil {
		return *x.MaxIdleConn
	}
	return 0
}

func (x *ConnPool) GetMaxLifeTime() string {
	if x != nil && x.MaxLifeTime != nil {
		return *x.MaxLifeTime
	}
	return ""
}

func (x *ConnPool) GetMaxIdleTime() string {
	if x != nil && x.MaxIdleTime != nil {
		return *x.MaxIdleTime
	}
	return ""
}

var File_config_db_engine_config_proto protoreflect.FileDescriptor

var file_config_db_engine_config_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x62, 0x5f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd5, 0x03, 0x0a, 0x0c, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x73, 0x6e, 0x12, 0x3d, 0x0a, 0x18, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x16, 0x73, 0x6b, 0x69, 0x70, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x6d,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x53, 0x74, 0x6d, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x16, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x14, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x50, 0x69, 0x6e,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69,
	0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x3a, 0x0a, 0x0e, 0x6f, 0x72, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0c, 0x6f, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x6d, 0x74, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xb0, 0x01, 0x0a, 0x0c, 0x4f, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6c, 0x6f, 0x77, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66,
	0x75, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x66,
	0x75, 0x6c, 0x22, 0xf6, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f,
	0x69, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4c,
	0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x69, 0x66, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_db_engine_config_proto_rawDescOnce sync.Once
	file_config_db_engine_config_proto_rawDescData = file_config_db_engine_config_proto_rawDesc
)

func file_config_db_engine_config_proto_rawDescGZIP() []byte {
	file_config_db_engine_config_proto_rawDescOnce.Do(func() {
		file_config_db_engine_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_db_engine_config_proto_rawDescData)
	})
	return file_config_db_engine_config_proto_rawDescData
}

var file_config_db_engine_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_db_engine_config_proto_goTypes = []interface{}{
	(*EngineConfig)(nil), // 0: config.EngineConfig
	(*OrmLogConfig)(nil), // 1: config.OrmLogConfig
	(*ConnPool)(nil),     // 2: config.ConnPool
}
var file_config_db_engine_config_proto_depIdxs = []int32{
	2, // 0: config.EngineConfig.conn_pool:type_name -> config.ConnPool
	1, // 1: config.EngineConfig.orm_log_config:type_name -> config.OrmLogConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_config_db_engine_config_proto_init() }
func file_config_db_engine_config_proto_init() {
	if File_config_db_engine_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_db_engine_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_db_engine_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrmLogConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_db_engine_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_db_engine_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_config_db_engine_config_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_db_engine_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_db_engine_config_proto_goTypes,
		DependencyIndexes: file_config_db_engine_config_proto_depIdxs,
		MessageInfos:      file_config_db_engine_config_proto_msgTypes,
	}.Build()
	File_config_db_engine_config_proto = out.File
	file_config_db_engine_config_proto_rawDesc = nil
	file_config_db_engine_config_proto_goTypes = nil
	file_config_db_engine_config_proto_depIdxs = nil
}
